From 1704497e9ad07ce2336f2b525ef89222547da574 Mon Sep 17 00:00:00 2001
From: Andiry Xu <jix024@cs.ucsd.edu>
Date: Fri, 9 May 2014 22:02:48 -0700
Subject: [PATCH 8/8] Retrun vma to bankshot2 to insert into extent tree


Signed-off-by: Andiry Xu <jix024@cs.ucsd.edu>
---
 include/linux/mm.h | 11 +++++++----
 mm/filemap_xip.c   |  2 ++
 mm/internal.h      |  3 ++-
 mm/mmap.c          | 15 ++++++++++-----
 mm/util.c          |  5 +++--
 5 files changed, 24 insertions(+), 12 deletions(-)

diff --git a/include/linux/mm.h b/include/linux/mm.h
index b652078..32517e1 100644
--- a/include/linux/mm.h
+++ b/include/linux/mm.h
@@ -1549,11 +1549,13 @@ extern int do_munmap(struct mm_struct *, unsigned long, size_t);
 
 extern unsigned long bankshot2_mmap_region(void *bs2_dev,
 	struct file *file, unsigned long addr,
-	unsigned long len, vm_flags_t vm_flags, unsigned long pgoff);
+	unsigned long len, vm_flags_t vm_flags, unsigned long pgoff,
+	struct vm_area_struct **return_vma);
 extern unsigned long bankshot2_do_mmap_pgoff(void *bs2_dev, 
 	struct file *file, unsigned long addr,
 	unsigned long len, unsigned long prot, unsigned long flags,
-	unsigned long pgoff, unsigned long *populate);
+	unsigned long pgoff, unsigned long *populate,
+	struct vm_area_struct **return_vma);
 
 #ifdef CONFIG_MMU
 extern int __mm_populate(unsigned long addr, unsigned long len,
@@ -1577,9 +1579,10 @@ extern unsigned long vm_mmap(struct file *, unsigned long,
 
 extern unsigned long bankshot2_mmap(void *bs2_dev, unsigned long addr,
 		unsigned long len, unsigned long prot, unsigned long flags,
-		unsigned long fd, unsigned long pgoff);
+		unsigned long fd, unsigned long pgoff,
+		struct vm_area_struct **return_vma);
 
-extern void bankshot2_unmap(struct address_space *mapping, struct page *page, unsigned long pgoff);
+//extern void bankshot2_unmap(struct address_space *mapping, struct page *page, unsigned long pgoff);
 
 struct vm_unmapped_area_info {
 #define VM_UNMAPPED_AREA_TOPDOWN 1
diff --git a/mm/filemap_xip.c b/mm/filemap_xip.c
index 915f7f6..ab073b3 100644
--- a/mm/filemap_xip.c
+++ b/mm/filemap_xip.c
@@ -155,6 +155,7 @@ xip_file_read(struct file *filp, char __user *buf, size_t len, loff_t *ppos)
 }
 EXPORT_SYMBOL_GPL(xip_file_read);
 
+#if 0
 void bankshot2_unmap(struct address_space *mapping, struct page *page, unsigned long pgoff)
 {
 	struct vm_area_struct *vma;
@@ -201,6 +202,7 @@ void bankshot2_unmap(struct address_space *mapping, struct page *page, unsigned
 //	mutex_unlock(&mapping->i_mmap_mutex);
 }
 EXPORT_SYMBOL_GPL(bankshot2_unmap);
+#endif
 
 /*
  * __xip_unmap is invoked from xip_unmap and
diff --git a/mm/internal.h b/mm/internal.h
index 085547e..3d497cd 100644
--- a/mm/internal.h
+++ b/mm/internal.h
@@ -355,7 +355,8 @@ extern unsigned long vm_mmap_pgoff(struct file *, unsigned long,
 extern unsigned long bankshot2_vm_mmap_pgoff(void *bs2_dev,
 	struct file *file, unsigned long addr,
 	unsigned long len, unsigned long prot,
-	unsigned long flag, unsigned long pgoff);
+	unsigned long flag, unsigned long pgoff,
+	struct vm_area_struct **return_vma);
 
 extern void set_pageblock_order(void);
 unsigned long reclaim_clean_pages_from_list(struct zone *zone,
diff --git a/mm/mmap.c b/mm/mmap.c
index 2431a4a..63d3cf3 100644
--- a/mm/mmap.c
+++ b/mm/mmap.c
@@ -1352,7 +1352,8 @@ unsigned long do_mmap_pgoff(struct file *file, unsigned long addr,
 unsigned long bankshot2_do_mmap_pgoff(void *bs2_dev, struct file *file,
 			unsigned long addr, unsigned long len,
 			unsigned long prot, unsigned long flags,
-			unsigned long pgoff, unsigned long *populate)
+			unsigned long pgoff, unsigned long *populate,
+			struct vm_area_struct **return_vma)
 {
 	struct mm_struct * mm = current->mm;
 	struct inode *inode;
@@ -1494,7 +1495,8 @@ unsigned long bankshot2_do_mmap_pgoff(void *bs2_dev, struct file *file,
 			vm_flags |= VM_NORESERVE;
 	}
 
-	addr = bankshot2_mmap_region(bs2_dev, file, addr, len, vm_flags, pgoff);
+	addr = bankshot2_mmap_region(bs2_dev, file, addr, len, vm_flags, pgoff,
+					return_vma);
 	if (!IS_ERR_VALUE(addr) &&
 	    ((vm_flags & VM_LOCKED) ||
 	     (flags & (MAP_POPULATE | MAP_NONBLOCK)) == MAP_POPULATE))
@@ -1554,7 +1556,8 @@ out:
 
 unsigned long bankshot2_mmap(void *bs2_dev, unsigned long addr,
 		unsigned long len, unsigned long prot, unsigned long flags,
-		unsigned long fd, unsigned long pgoff)
+		unsigned long fd, unsigned long pgoff,
+		struct vm_area_struct **return_vma)
 {
 	struct file *file = NULL;
 	unsigned long retval = -EBADF;
@@ -1595,7 +1598,7 @@ unsigned long bankshot2_mmap(void *bs2_dev, unsigned long addr,
 	flags &= ~(MAP_EXECUTABLE | MAP_DENYWRITE);
 
 	retval = bankshot2_vm_mmap_pgoff(bs2_dev, file, addr, len, prot,
-					flags, pgoff);
+					flags, pgoff, return_vma);
 out_fput:
 	if (file)
 		fput(file);
@@ -1843,7 +1846,8 @@ unacct_error:
 
 unsigned long bankshot2_mmap_region(void *bs2_dev, struct file *file,
 		unsigned long addr, unsigned long len,
-		vm_flags_t vm_flags, unsigned long pgoff)
+		vm_flags_t vm_flags, unsigned long pgoff,
+		struct vm_area_struct **return_vma)
 {
 	struct mm_struct *mm = current->mm;
 	struct vm_area_struct *vma, *prev;
@@ -1990,6 +1994,7 @@ out:
 	if (file)
 		uprobe_mmap(vma);
 
+	*return_vma = vma;
 	return addr;
 
 unmap_and_free_vma:
diff --git a/mm/util.c b/mm/util.c
index 6167574..3ec4e8c 100644
--- a/mm/util.c
+++ b/mm/util.c
@@ -373,7 +373,8 @@ unsigned long vm_mmap_pgoff(struct file *file, unsigned long addr,
 unsigned long bankshot2_vm_mmap_pgoff(void *bs2_dev,
 	struct file *file, unsigned long addr,
 	unsigned long len, unsigned long prot,
-	unsigned long flag, unsigned long pgoff)
+	unsigned long flag, unsigned long pgoff,
+	struct vm_area_struct **return_vma)
 {
 	unsigned long ret;
 	struct mm_struct *mm = current->mm;
@@ -383,7 +384,7 @@ unsigned long bankshot2_vm_mmap_pgoff(void *bs2_dev,
 	if (!ret) {
 		down_write(&mm->mmap_sem);
 		ret = bankshot2_do_mmap_pgoff(bs2_dev, file, addr, len, prot,
-				flag, pgoff, &populate);
+				flag, pgoff, &populate, return_vma);
 		up_write(&mm->mmap_sem);
 		if (populate)
 			mm_populate(ret, populate);
-- 
1.8.1.2

